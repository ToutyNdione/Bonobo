<?php

namespace BP\BonoboBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use BP\BonoboBundle\Entity\User;


/**
 * Friend
 *
 * @ORM\Table(name="friend")
 * @ORM\Entity(repositoryClass="BP\BonoboBundle\Repository\FriendRepository")
 */
class Friend
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    /**
     * @ORM\ManyToMany(targetEntity="User", mappedBy="myFriends")
     **/
    private $friendsWithMe;

    /**
     * @ORM\ManyToMany(targetEntity="User", inversedBy="friendsWithMe")
     * @ORM\JoinTable(name="friends",
     *      joinColumns={@ORM\JoinColumn(name="user_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="friend_user_id", referencedColumnName="id")}
     *      )
     **/
    private $myFriends;

     public function __construct() {
           // parent::__construct();        
            $this->friendsWithMe = new \Doctrine\Common\Collections\ArrayCollection();
            $this->myFriends = new \Doctrine\Common\Collections\ArrayCollection();
        }

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
       public function getFriends()
    {
        return $this->friends;
    }

    /**
     * 
     * @param  User $user
     * @return void
     */
    public function addMyFriend(User $friend)
    {
           
            $this->myFriends[]= $friend;
            
        
    }

    /**
     * @param  User $user
     * @return void
     */
    public function removeMyFriend(User $friend)
    {
        
            $this->myFriends->removeElement($friend);
            
    }

}

